"""Классы для генерированных классов."""
from abc import ABC

from stw_py_api_runtime.gen_classes.types.enum_type import EnumType
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.sdk.exceptions import ValidationError


class GenCommandSender(ABC):
    """Базовый класс для авто-генерированных классов под CommandSender."""

    device_address: DeviceAddress
    broker: BrokerAPI


class GenTm(ABC):
    """Базовый класс для авто-генерированных классов под Tm."""

    device_address: DeviceAddress
    broker: BrokerAPI

    def get_once(self, to_json: bool = True, with_meta: bool = True):
        """Получить разово все ТМ модуля."""
        # локальный импорт из-за рекурсивного импорта GenTm в модулях
        if not to_json and not with_meta:
            raise ValidationError('Meta can be removed only from json format')
        from stw_py_api_runtime.gen_classes.catchers.tm_catcher import get_tm_module  # noqa: WPS433
        return get_tm_module(self, to_json=to_json, with_meta=with_meta)

    def enable(self, frequency: EnumType):
        """Включить всю ТМ вложенной структуры этого модуля с заданной частотой."""
        from stw_py_api_runtime.gen_classes.catchers.tm_catcher import enable_tm_module  # noqa: WPS433
        enable_tm_module(self, frequency)

    def disable(self):
        """Выключить всю ТМ вложенной структуры этого модуля."""
        from stw_py_api_runtime.gen_classes.catchers.tm_catcher import disable_tm_module  # noqa: WPS433
        disable_tm_module(self)


class GenCfg(ABC):
    """Базовый класс для авто-генерированных классов под Cfg."""

    device_id: int
    broker: BrokerAPI


class GenEvent(ABC):
    """Базовый класс для авто-генерированных классов под Event."""

    device_address: DeviceAddress
    broker: BrokerAPI


class GenDevice(ABC):
    """Базовый класс для авто-генерированных классов под девайсы."""

    device_id: int
    broker: BrokerAPI
    cmds: GenCommandSender
    tms: GenTm
    events: GenEvent
