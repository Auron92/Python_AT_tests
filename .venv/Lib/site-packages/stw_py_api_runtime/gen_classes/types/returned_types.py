"""Типы данных в сообщении."""
from dataclasses import dataclass
from typing import Optional, Type

from stw_py_api_runtime.gen_classes.types.serializable_base import Serializable


@dataclass
class ReturnTypes:
    """
    Сущность, описывающая типы, в которых могут быть представлены возвращаемые данные.

    Порядок имеет значение. Индекс типа в массиве используется для идентификации
    типа данных в сообщении. Допускаем только два типа: ошибка и успех.
    """

    error_type: Optional[Type[Serializable]] = None
    successful_type: Optional[Type[Serializable]] = None

    def __post_init__(self):
        self.ordered_types = (self.error_type, self.successful_type)

    def __getitem__(self, type_index: int):
        """Получить тип по индексу."""
        try:
            return self.ordered_types[type_index]
        except IndexError:
            raise IndexError(f'Failed getting return type by idx {type_index}. Can be only {self.ordered_types}.')

    def __str__(self):
        str_parts = []
        for idx, type_ in enumerate(self.ordered_types):
            type_str = f'[{idx}] {type_}'
            str_parts.append(type_str)
        return ', '.join(str_parts)

    def index(self, value) -> int:
        """Получить индекс типа."""
        return self.ordered_types.index(value)

    @staticmethod
    def get_error_type_idx() -> int:  # noqa: WPS602, WPS605
        """Получить индекс типа ошибки."""
        return 0

    @staticmethod
    def get_successful_type_idx() -> int:  # noqa: WPS602, WPS605
        """Получить индекс успешного типа."""
        return 1
