"""Базовый класс для значений None."""
from stw_py_api_runtime.gen_classes.types.serializable_base import Serializable


class NoneType(Serializable):
    """Базовый класс для описания None.

    В прошивке yml его нет. Значение None может быть в optional и других, базирующихся на optional.

    WARNING: сравнение NoneType() is None не будет работать.
        Необходимо использовать NoneType() == None
    """

    instance = None

    def __new__(cls, *args, **kwargs):
        """Присваивание None для синглтона."""
        if not isinstance(cls.instance, cls):
            cls.instance = object.__new__(cls, *args, **kwargs)
        return cls.instance

    def __init__(self):
        self.value = None

    def __bool__(self):
        return bool(None)

    def __repr__(self):
        return self.value.__repr__()

    def __eq__(self, other):
        return self.value == other

    @classmethod
    def from_json(cls, json_data: None):
        """Конструирование из json данных."""
        return json_data

    def to_json(self) -> None:  # noqa: WPS324
        """Сериализация в json."""
        return None  # noqa: WPS324

    @classmethod
    def from_bin(cls, bin_data: bytes) -> tuple:
        """Конструирование из байтов."""
        return None, bin_data

    def to_bin(self) -> bytes:
        """Сериализация в байты."""
        return bytes()  # noqa: WPS351
