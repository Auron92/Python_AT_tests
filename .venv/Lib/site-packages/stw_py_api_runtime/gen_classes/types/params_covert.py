"""Преобразование типов timbrel в нативные питоновские."""
from stw_py_api_runtime.gen_classes.telemetry.parse import Message
from stw_py_api_runtime.gen_classes.types.array_base import ArrayBase
from stw_py_api_runtime.gen_classes.types.bool_type import Bool
from stw_py_api_runtime.gen_classes.types.number import Number


def struct_values_to_int(obj: Message):
    """Конвертирует pygen int, содержащиеся в struct в питоновский тип int."""
    for field_name, field_value in obj.items():
        if isinstance(field_value, Number):
            setattr(obj, field_name, field_value.value)

    return obj


def array_values_to_int(obj: ArrayBase):
    """Конвертировать pygen int|float в питоновские типы."""
    for idx in range(obj.count):
        obj[idx] = obj[idx].value
    return obj


def convert_to_int(arguments: dict):
    """Преобразует словарь, извлекая value из полей типа Number и вложенных полей типа Message."""
    result = {}
    for arg_name, arg_value in arguments.items():
        if isinstance(arg_value, (Number, Bool)):
            result[arg_name] = arg_value.value
        elif isinstance(arg_value, Message):
            result[arg_name] = struct_values_to_int(arg_value)
        elif isinstance(arg_value, ArrayBase):
            result[arg_name] = array_values_to_int(arg_value)
        else:
            result[arg_name] = arg_value

    return result
