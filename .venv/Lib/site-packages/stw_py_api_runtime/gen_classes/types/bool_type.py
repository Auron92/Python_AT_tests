"""Сериализуемый тип bool."""
from typing import Tuple, Union

from stw_py_api_runtime.gen_classes.types.serializable_base import Serializable


class Bool(Serializable):
    """Наш аналог bool-a. Добавлена сериализация."""

    def __init__(self, value: bool = False):
        self.value = value

    @classmethod
    def from_json(cls, json_data: Union[str, bool]):
        """Десериализация из json-данных."""
        if isinstance(json_data, str):
            bool_data = json_data == 'True'
        else:
            bool_data = json_data
        return cls(value=bool_data)

    def to_json(self):
        """Сериализация."""
        return self.value

    def to_bin(self) -> bytes:
        """Сериализация."""
        return b'\x01' if self.value else b'\x00'

    @classmethod
    def from_bin(cls, bin_data: bytes) -> Tuple['Bool', bytes]:
        """Десериализация из байтов."""
        bool_data = bool(bin_data[0])
        return cls(value=bool_data), bin_data[1:]

    def __eq__(self, other):
        return self.value == other

    def __bool__(self):
        return self.value

    def __repr__(self) -> str:
        return str(self.value)

    def __str__(self):
        return str(self.value)

    def __format__(self, format_spec):
        return f'{{:{format_spec}}}'.format(self.value)
