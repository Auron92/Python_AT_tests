"""Инструменты для подписки на сообщения."""
from typing import Callable, Optional
from uuid import UUID

from stw_py_api_runtime.gen_classes.telemetry.predicates import StreamMsgChannel
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI


def subscribe_to_device(  # noqa: WPS211
    broker: BrokerAPI,
    call: Callable,
    use_single: bool = False,
    channel: Optional[StreamMsgChannel] = None,
    device_id: Optional[int] = None,
    ip_address: Optional[str] = None,
) -> UUID:
    """Подписаться на все сообщения для прибора.

    Возвращает айди подписчика.
    """
    return broker.subscribe_to_tm(
        predicate=broker.predicate_class(
            device_id=device_id,
            ip_address=ip_address,
            channel=channel,
            is_from_device=False,
        ),
        callback=call,
        use_single=use_single,
    )


def subscribe_to_message(
    broker: BrokerAPI,
    message_id: int,
    call: Callable,
    use_single: bool = False,
    channel: Optional[StreamMsgChannel] = None,
) -> UUID:
    """Подписаться на определенное сообщение с любого прибора.

    Возвращает айди подписчика.
    """
    return broker.subscribe_to_tm(
        predicate=broker.predicate_class(
            message_id=message_id,
            channel=channel,
        ),
        callback=call,
        use_single=use_single,
    )
