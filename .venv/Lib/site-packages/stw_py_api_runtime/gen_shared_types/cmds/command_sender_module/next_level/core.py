from dataclasses import asdict, dataclass, is_dataclass
from typing import Union

from stw_py_api_runtime.gen_classes.gen_device import GenCommandSender
from stw_py_api_runtime.gen_classes.telemetry.parse import RepMessage, ReqMessage
from stw_py_api_runtime.gen_classes.types.returned_types import ReturnTypes
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, CmdCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress

from stw_py_api_runtime.gen_shared_types.basic_types import *

from .core_module.next_level import dtc
from .core_module.next_level import fs




class CommandSender(GenCommandSender):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI):
        """Конструктор модуля команд."""
        self.dtc: dtc.CommandSender = dtc.CommandSender(device_address, broker)
        self.fs: fs.CommandSender = fs.CommandSender(device_address, broker)


