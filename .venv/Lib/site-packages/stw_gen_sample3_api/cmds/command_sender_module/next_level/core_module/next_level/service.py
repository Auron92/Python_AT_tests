from dataclasses import asdict, dataclass, is_dataclass
from typing import Union

from stw_py_api_runtime.gen_classes.gen_device import GenCommandSender
from stw_py_api_runtime.gen_classes.telemetry.parse import RepMessage, ReqMessage
from stw_py_api_runtime.gen_classes.types.returned_types import ReturnTypes
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, CmdCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress

from stw_gen_sample3_api.basic_types import *

from .service_module.next_level import mram
from .service_module.next_level import checksum




class CommandSender(GenCommandSender):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI):
        """Конструктор модуля команд."""
        self.mram: mram.CommandSender = mram.CommandSender(device_address, broker)
        self.checksum: checksum.CommandSender = checksum.CommandSender(device_address, broker)


