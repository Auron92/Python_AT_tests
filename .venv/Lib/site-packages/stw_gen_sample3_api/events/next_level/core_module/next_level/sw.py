from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenEvent
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, EventCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.catchers.event_catcher import EventCatcher
from stw_py_api_runtime.gen_classes.telemetry.parse import EventMessage
from stw_gen_sample3_api.basic_types import *


@dataclass
class BootReportEvent(EventMessage):
    """Прибор перезагрузился"""
    # Причина сброса контроллера
    from stw_gen_sample3_api.types.core.sw.reset_reason_type import ResetReason
    event: ResetReason


@dataclass
class ErrorEvent(EventMessage):
    """Данные об ошибке"""
    # Ошибка загрузки времени наработки и количества перезагрузок
    from stw_gen_sample3_api.types.core.sw.error_type import Error
    event: Error


@dataclass
class FrmTypeEvent(EventMessage):
    """Информация о типе исполняемом ПО"""
    # Тип ПО прибора
    from stw_gen_sample3_api.types.core.sw.firmware_type_type import FirmwareType
    event: FirmwareType


@dataclass
class FwInfoEvent(EventMessage):
    """Полная информация об исполняемом ПО"""
    # Тип ПО прибора
    from stw_gen_sample3_api.types.core.sw.firmware_type_type import FirmwareType
    event: FirmwareType
    # Серийный номер
    from stw_gen_sample3_api.types.core.sw.serial_type import Serial
    serial: Serial
    # Firmware-id прибора
    from stw_gen_sample3_api.types.core.sw.firmware_id_type import FirmwareId
    fwId: FirmwareId
    # Версия прошивки
    from stw_gen_sample3_api.types.core.sw.version_type import Version
    version: Version
    # Hardware-id прибора
    from stw_gen_sample3_api.types.core.sw.hardware_id_type import HardwareId
    hwId: HardwareId


class Event(GenEvent):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля событий."""

        self.bootReport = broker.event_catcher_class[BootReportEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=BootReportEvent, name='core.sw.bootReport', msg_id=1188179208,
        )
        self.error = broker.event_catcher_class[ErrorEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=ErrorEvent, name='core.sw.error', msg_id=2423335328,
        )
        self.frmType = broker.event_catcher_class[FrmTypeEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=FrmTypeEvent, name='core.sw.frmType', msg_id=1202503845,
        )
        self.fwInfo = broker.event_catcher_class[FwInfoEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=FwInfoEvent, name='core.sw.fwInfo', msg_id=2675670681,
        )
