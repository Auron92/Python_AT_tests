from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenEvent
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, EventCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.catchers.event_catcher import EventCatcher
from stw_py_api_runtime.gen_classes.telemetry.parse import EventMessage
from stw_gen_sample3_api.basic_types import *


@dataclass
class StateChangedEvent(EventMessage):
    """Смена режима работы синхронизации"""
    # Режим работы
    from stw_gen_sample3_api.types.core.sync.can2.mode_type import Mode
    event: Mode
    # Причина смены режима работы
    from stw_gen_sample3_api.types.core.sync.can2.reason_type import Reason
    reason: Reason


@dataclass
class ErrorEvent(EventMessage):
    """Обнаружена ошибка"""
    # Ошибки
    from stw_gen_sample3_api.types.core.sync.can2.error_type import Error
    event: Error
    # Нода другого мастера
    from stw_gen_sample3_api.types.core.nodeid2.node_id_type import NodeId
    nodeId: NodeId


class Event(GenEvent):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля событий."""

        self.stateChanged = broker.event_catcher_class[StateChangedEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=StateChangedEvent, name='core.sync.can2.stateChanged', msg_id=1798164143,
        )
        self.error = broker.event_catcher_class[ErrorEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=ErrorEvent, name='core.sync.can2.error', msg_id=3657879660,
        )
