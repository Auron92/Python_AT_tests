from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenEvent
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, EventCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.catchers.event_catcher import EventCatcher
from stw_py_api_runtime.gen_classes.telemetry.parse import EventMessage
from stw_gen_sample3_api.basic_types import *


@dataclass
class VoltageEventsEvent(EventMessage):
    """Событие преодоления порогов напряжения"""
    # События преодоления порогов напряжения
    from stw_gen_sample3_api.types.core.periph3.voltage_events_type import VoltageEvents
    event: VoltageEvents
    # Канал напряжения
    from stw_gen_sample3_api.types.core.periph3.voltage_channels_type import VoltageChannels
    channel: VoltageChannels
    # Значение напряжения
    value: uint16_t


@dataclass
class PowerEventsEvent(EventMessage):
    """Событие преодоления порогов напряжения"""
    # События преодоления порогов мощности
    from stw_gen_sample3_api.types.core.periph3.power_events_type import PowerEvents
    event: PowerEvents
    # Текущее значение мощности
    value: uint16_t


@dataclass
class AdcVRefEventsEvent(EventMessage):
    """Событие преодоления порогов опорным напряжением АЦП"""
    # События преодоления порогов напряжения
    from stw_gen_sample3_api.types.core.periph3.voltage_events_type import VoltageEvents
    event: VoltageEvents
    # Значение напряжения
    value: uint16_t


class Event(GenEvent):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля событий."""

        self.voltageEvents = broker.event_catcher_class[VoltageEventsEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=VoltageEventsEvent, name='core.periph3.voltageEvents', msg_id=3695440672,
        )
        self.powerEvents = broker.event_catcher_class[PowerEventsEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=PowerEventsEvent, name='core.periph3.powerEvents', msg_id=3955050378,
        )
        self.adcVRefEvents = broker.event_catcher_class[AdcVRefEventsEvent](
            device_address=device_address, broker=broker, pygen_device=pygen_device, msg_type=AdcVRefEventsEvent, name='core.periph3.adcVRefEvents', msg_id=3632542064,
        )
