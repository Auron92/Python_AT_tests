from dataclasses import dataclass
from typing import TypedDict, Union

from stw_gen_sample3_api.basic_types import *
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message


from stw_gen_sample3_api.types.core.time.ms_1_6u_type import ms16u


@dataclass
class Settings(_Message):

    # Период отправки частой ТМ
    often: ms16u
    # Период отправки обычной ТМ
    ordinary: ms16u
    # Период отправки редкой ТМ
    rare: ms16u
    # Разрешается отправка циклических сообщений
    enabled: bool_type


class SettingsDict(TypedDict):

    # Период отправки частой ТМ
    often: Union[ms16u]

    # Период отправки обычной ТМ
    ordinary: Union[ms16u]

    # Период отправки редкой ТМ
    rare: Union[ms16u]

    # Разрешается отправка циклических сообщений
    enabled: Union[bool_type, bool ]

