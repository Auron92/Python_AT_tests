from dataclasses import dataclass
from typing import TypedDict, Union

from stw_gen_sample3_api.basic_types import *
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message




@dataclass
class Stack(_Message):

    # 
    r0: uint32_t
    # 
    r1: uint32_t
    # 
    r2: uint32_t
    # 
    r3: uint32_t
    # 
    r12: uint32_t
    # Адрес возврата последнего перехода
    lr: uint32_t
    # Адрес текущей выполняемой инструкции
    pc: uint32_t
    # Общий регистр состояния программы
    psr: uint32_t


class StackDict(TypedDict):

    # 
    r0: Union[uint32_t, int ]

    # 
    r1: Union[uint32_t, int ]

    # 
    r2: Union[uint32_t, int ]

    # 
    r3: Union[uint32_t, int ]

    # 
    r12: Union[uint32_t, int ]

    # Адрес возврата последнего перехода
    lr: Union[uint32_t, int ]

    # Адрес текущей выполняемой инструкции
    pc: Union[uint32_t, int ]

    # Общий регистр состояния программы
    psr: Union[uint32_t, int ]

