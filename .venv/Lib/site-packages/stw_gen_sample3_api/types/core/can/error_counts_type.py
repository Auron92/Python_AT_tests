from dataclasses import dataclass
from typing import TypedDict, Union

from stw_gen_sample3_api.basic_types import *
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message




@dataclass
class ErrorCounts(_Message):

    # Отсутствие подтверждения приёма сообщения
    ack: uint32_t
    # Не совпадение реально переданного бита с ожидаемым
    bit: uint32_t
    # Не совпадение принятого и рассчитанного CRC
    crc: uint32_t
    # Не соответствие формы CAN пакета (положение и/или уровни разделителей, уровни ACK и т.д.)
    form: uint32_t
    # Более 5 бит подряд одинаковые
    stuff: uint32_t
    # Счётчик ошибок приёма (REC)
    rxCounter: uint32_t
    # Счётчик ошибок передачи (TEC)
    txCounter: uint32_t
    # Общее количество ошибок приёма
    rxTotal: uint32_t
    # Общее количество ошибок передачи
    txTotal: uint32_t
    # rxErrorCounter или txErrorCounter превышает 127
    passive: uint32_t
    # txErrorCounter превышает 255
    busOff: uint32_t


class ErrorCountsDict(TypedDict):

    # Отсутствие подтверждения приёма сообщения
    ack: Union[uint32_t, int ]

    # Не совпадение реально переданного бита с ожидаемым
    bit: Union[uint32_t, int ]

    # Не совпадение принятого и рассчитанного CRC
    crc: Union[uint32_t, int ]

    # Не соответствие формы CAN пакета (положение и/или уровни разделителей, уровни ACK и т.д.)
    form: Union[uint32_t, int ]

    # Более 5 бит подряд одинаковые
    stuff: Union[uint32_t, int ]

    # Счётчик ошибок приёма (REC)
    rxCounter: Union[uint32_t, int ]

    # Счётчик ошибок передачи (TEC)
    txCounter: Union[uint32_t, int ]

    # Общее количество ошибок приёма
    rxTotal: Union[uint32_t, int ]

    # Общее количество ошибок передачи
    txTotal: Union[uint32_t, int ]

    # rxErrorCounter или txErrorCounter превышает 127
    passive: Union[uint32_t, int ]

    # txErrorCounter превышает 255
    busOff: Union[uint32_t, int ]

