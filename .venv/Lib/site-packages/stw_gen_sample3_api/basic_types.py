from stw_py_api_runtime.gen_classes.types.bits_base import BitsBase
from stw_py_api_runtime.gen_classes.types.bool_type import Bool
from stw_py_api_runtime.gen_classes.types.bytes_type import Bytes
from stw_py_api_runtime.gen_classes.types.number import (BaseComplex,
                                                         BaseFloat, BaseInt,
                                                         Number)
from stw_py_api_runtime.gen_classes.types.string_type import StringBase
from stw_py_api_runtime.gen_classes.types.varint_type import VarIntBase
from stw_py_api_runtime.gen_classes.types.vector_type import VectorBase

__all__ = (
    '__u1',
    '__u10',
    '__u11',
    '__u12',
    '__u13',
    '__u14',
    '__u15',
    '__u16',
    '__u17',
    '__u18',
    '__u19',
    '__u2',
    '__u20',
    '__u21',
    '__u22',
    '__u23',
    '__u24',
    '__u25',
    '__u26',
    '__u27',
    '__u28',
    '__u29',
    '__u3',
    '__u30',
    '__u31',
    '__u32',
    '__u4',
    '__u5',
    '__u6',
    '__u7',
    '__u8',
    '__u9',
    'double',
    'f32',
    'f64',
    'float_type',
    'i16',
    'i32',
    'i64',
    'i8',
    'int16_t',
    'int32_t',
    'int64_t',
    'int8_t',
    'u16',
    'u32',
    'u64',
    'u8',
    'ui16',
    'ui32',
    'ui64',
    'ui8',
    'uint16_t',
    'uint32_t',
    'uint64_t',
    'uint8_t',
    'varint16_t',
    'varint32_t',
    'varint64_t',
    'varuint16_t',
    'varuint32_t',
    'varuint64_t',
    
    'bool_type',
    'bytes_type',
    'string',
)


class __u1(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 1
        super().__init__(value)

class __u10(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 10
        super().__init__(value)

class __u11(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 11
        super().__init__(value)

class __u12(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 12
        super().__init__(value)

class __u13(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 13
        super().__init__(value)

class __u14(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 14
        super().__init__(value)

class __u15(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 15
        super().__init__(value)

class __u16(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 16
        super().__init__(value)

class __u17(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 17
        super().__init__(value)

class __u18(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 18
        super().__init__(value)

class __u19(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 19
        super().__init__(value)

class __u2(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 2
        super().__init__(value)

class __u20(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 20
        super().__init__(value)

class __u21(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 21
        super().__init__(value)

class __u22(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 22
        super().__init__(value)

class __u23(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 23
        super().__init__(value)

class __u24(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 24
        super().__init__(value)

class __u25(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 25
        super().__init__(value)

class __u26(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 26
        super().__init__(value)

class __u27(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 27
        super().__init__(value)

class __u28(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 28
        super().__init__(value)

class __u29(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 29
        super().__init__(value)

class __u3(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 3
        super().__init__(value)

class __u30(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 30
        super().__init__(value)

class __u31(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 31
        super().__init__(value)

class __u32(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 32
        super().__init__(value)

class __u4(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 4
        super().__init__(value)

class __u5(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 5
        super().__init__(value)

class __u6(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 6
        super().__init__(value)

class __u7(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 7
        super().__init__(value)

class __u8(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 8
        super().__init__(value)

class __u9(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 9
        super().__init__(value)

class double(BaseFloat, Number):
    def __init__(self, value=0):
        self.is_float = True
        self.is_signed = True
        self.bit_size = 64
        super().__init__(value)

class f32(BaseFloat, Number):
    def __init__(self, value=0):
        self.is_float = True
        self.is_signed = True
        self.bit_size = 32
        super().__init__(value)

class f64(BaseFloat, Number):
    def __init__(self, value=0):
        self.is_float = True
        self.is_signed = True
        self.bit_size = 64
        super().__init__(value)

class float_type(BaseFloat, Number):
    def __init__(self, value=0):
        self.is_float = True
        self.is_signed = True
        self.bit_size = 32
        super().__init__(value)

class i16(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 16
        super().__init__(value)

class i32(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 32
        super().__init__(value)

class i64(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 64
        super().__init__(value)

class i8(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 8
        super().__init__(value)

class int16_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 16
        super().__init__(value)

class int32_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 32
        super().__init__(value)

class int64_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 64
        super().__init__(value)

class int8_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 8
        super().__init__(value)

class u16(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 16
        super().__init__(value)

class u32(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 32
        super().__init__(value)

class u64(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 64
        super().__init__(value)

class u8(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 8
        super().__init__(value)

class ui16(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 16
        super().__init__(value)

class ui32(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 32
        super().__init__(value)

class ui64(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 64
        super().__init__(value)

class ui8(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 8
        super().__init__(value)

class uint16_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 16
        super().__init__(value)

class uint32_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 32
        super().__init__(value)

class uint64_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 64
        super().__init__(value)

class uint8_t(BaseInt, Number):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 8
        super().__init__(value)

class varint16_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 16
        super().__init__(value)

class varint32_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 32
        super().__init__(value)

class varint64_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = True
        self.bit_size = 64
        super().__init__(value)

class varuint16_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 16
        super().__init__(value)

class varuint32_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 32
        super().__init__(value)

class varuint64_t(VarIntBase, BaseInt):
    def __init__(self, value=0):
        self.is_float = False
        self.is_signed = False
        self.bit_size = 64
        super().__init__(value)


class bool_type(Bool):
    """Аналог bool-a."""


class bytes_type(Bytes):
    """Последовательность байт."""


class string(StringBase):
    """Тип string."""

    base = VectorBase