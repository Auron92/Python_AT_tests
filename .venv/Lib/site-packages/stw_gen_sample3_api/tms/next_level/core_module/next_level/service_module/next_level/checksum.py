from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenTm
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, TmCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message
from stw_gen_sample3_api.basic_types import *


@dataclass
class LastResultTm(_Message):
    """Результат последнего расчёта CRC32."""

    # Результат последнего расчёта CRC32 Flash памяти
    from stw_gen_sample3_api.types.core.service.types.mem_flash_crc_3_2_result_type import MemFlashCrc32Result
    value: MemFlashCrc32Result


class Tm(GenTm):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля телеметрии."""

        self.lastResult = broker.tm_catcher_class[LastResultTm](
            device_address=device_address, broker=broker, pygen_device=pygen_device,msg_type=LastResultTm, name='core.service.checksum.lastResult',
            msg_id=1200333753, req_id=2195657469, rep_id=4124582507,
        )
