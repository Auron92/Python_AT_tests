from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenTm
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, TmCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message
from stw_gen_sample3_api.basic_types import *


@dataclass
class StatsTm(_Message):
    """Информация о синхронизации времени."""

    # Общая статистика
    from stw_gen_sample3_api.types.core.sync.can2.stats_type import Stats
    common: Stats
    # Статистика синхронизации для slave
    from stw_gen_sample3_api.types.core.sync.can2.slave_stats_type import SlaveStats
    slave: SlaveStats
    # Статистика синхронизации для master
    from stw_gen_sample3_api.types.core.sync.can2.master_stats_type import MasterStats
    master: MasterStats


class Tm(GenTm):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля телеметрии."""

        self.stats = broker.tm_catcher_class[StatsTm](
            device_address=device_address, broker=broker, pygen_device=pygen_device,msg_type=StatsTm, name='core.sync.can2.stats',
            msg_id=3499887543, req_id=3733187431, rep_id=2844056561,
        )
