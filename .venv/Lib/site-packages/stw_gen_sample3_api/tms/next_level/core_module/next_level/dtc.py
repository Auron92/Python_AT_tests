from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenTm
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, TmCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message
from stw_gen_sample3_api.basic_types import *


@dataclass
class ActivesTm(_Message):
    """Вектор активных неисправностей."""

    # Вектор неисправностей
    from stw_gen_sample3_api.types.core.dtc.items_type import Items
    value: Items


class Tm(GenTm):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля телеметрии."""

        self.actives = broker.tm_catcher_class[ActivesTm](
            device_address=device_address, broker=broker, pygen_device=pygen_device,msg_type=ActivesTm, name='core.dtc.actives',
            msg_id=4257448165, req_id=706463169, rep_id=1562178903,
        )
