from dataclasses import dataclass

from stw_py_api_runtime.gen_classes.gen_device import GenTm
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI, TmCatcherAPI
from stw_py_api_runtime.sdk.brokers.message import DeviceAddress
from stw_py_api_runtime.gen_classes.telemetry.parse import Message as _Message
from stw_gen_sample3_api.basic_types import *


@dataclass
class HashTm(_Message):
    """контрольная сумма описания ПО."""

    # None
    size: uint16_t
    # None
    hash: bytes_type


@dataclass
class SmallHashTm(_Message):
    """короткая контрольная сумма описания ПО."""

    # None
    hash: bytes_type


class Tm(GenTm):
    def __init__(self, device_address: DeviceAddress, broker: BrokerAPI, pygen_device):
        """Конструктор модуля телеметрии."""

        self.hash = broker.tm_catcher_class[HashTm](
            device_address=device_address, broker=broker, pygen_device=pygen_device,msg_type=HashTm, name='core.pkg.hash',
            msg_id=2200298736, req_id=3181054401, rep_id=3399235927,
        )
        self.smallHash = broker.tm_catcher_class[SmallHashTm](
            device_address=device_address, broker=broker, pygen_device=pygen_device,msg_type=SmallHashTm, name='core.pkg.smallHash',
            msg_id=3888492648, req_id=3128627275, rep_id=3447464157,
        )
