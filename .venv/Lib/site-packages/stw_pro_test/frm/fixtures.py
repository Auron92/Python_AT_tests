"""Firmware fixtures."""
from configparser import SectionProxy

import pytest
from loguru import logger

from stw_pro_test.frm.upload_to_device import upload_and_burn
from stw_pro_test.frm.utils import get_file


@pytest.fixture(scope='session', autouse=True)
def flash_device(request) -> bool:
    """
    Автоматическая прошивка необходимой версией.

    :return: True if device was flashed
    """
    general_config: SectionProxy = request.config.general
    flash_file = get_file(general_config)

    if flash_file.name == '-1':
        # Файл прошивки никак не задан - считаем, что прошивка не нужна
        yield False
    else:
        if not flash_file.exists():
            pytest.exit(f'Файл с прошивкой прибора не найден. Заданный путь до файла - {flash_file.absolute()}')
        device_id_from_config = general_config.getdecimal('device_id')
        sreda_server_ip = general_config.get('sreda_server_ip')

        logger.info(f'Прибор {device_id_from_config:#x} будет прошит прошивкой "{flash_file.name}"')
        burn_success = upload_and_burn(
            device_id=device_id_from_config,
            sreda_server_ip=sreda_server_ip,  # type: ignore[arg-type]  # will fall on config reading
            path_to_firmware=flash_file,   # type: ignore[arg-type]  # will fall on config reading
        )
        if not burn_success:
            pytest.exit(f'Прошивка прибора не удалась. Файл прошивки {flash_file.name}')
        yield True
