"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from . import common_pb2 as common__pb2
from . import discovery_pb2 as discovery__pb2

class DiscoveryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServers = channel.unary_stream('/sreda.grpc.gen.Discovery/GetServers', request_serializer=common__pb2.Empty.SerializeToString, response_deserializer=discovery__pb2.GetServersResponse.FromString)
        self.RegisterServer = channel.unary_stream('/sreda.grpc.gen.Discovery/RegisterServer', request_serializer=discovery__pb2.RegisterServerRequest.SerializeToString, response_deserializer=common__pb2.Empty.FromString)

class DiscoveryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetServers(self, request, context):
        """Called by client to request servers list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterServer(self, request, context):
        """Called by server to register in discovery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

def add_DiscoveryServicer_to_server(servicer, server):
    rpc_method_handlers = {'GetServers': grpc.unary_stream_rpc_method_handler(servicer.GetServers, request_deserializer=common__pb2.Empty.FromString, response_serializer=discovery__pb2.GetServersResponse.SerializeToString), 'RegisterServer': grpc.unary_stream_rpc_method_handler(servicer.RegisterServer, request_deserializer=discovery__pb2.RegisterServerRequest.FromString, response_serializer=common__pb2.Empty.SerializeToString)}
    generic_handler = grpc.method_handlers_generic_handler('sreda.grpc.gen.Discovery', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

class Discovery(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetServers(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sreda.grpc.gen.Discovery/GetServers', common__pb2.Empty.SerializeToString, discovery__pb2.GetServersResponse.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterServer(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sreda.grpc.gen.Discovery/RegisterServer', discovery__pb2.RegisterServerRequest.SerializeToString, common__pb2.Empty.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)