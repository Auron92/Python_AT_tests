"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from . import booking_pb2 as booking__pb2

class BookingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBookings = channel.unary_stream('/sreda.grpc.gen.Booking/GetBookings', request_serializer=booking__pb2.BookingInfoRequest.SerializeToString, response_deserializer=booking__pb2.GetBookingInfoResponse.FromString)
        self.AddBooking = channel.unary_unary('/sreda.grpc.gen.Booking/AddBooking', request_serializer=booking__pb2.BookingInfo.SerializeToString, response_deserializer=booking__pb2.BookingResponse.FromString)
        self.EditBooking = channel.unary_unary('/sreda.grpc.gen.Booking/EditBooking', request_serializer=booking__pb2.BookingInfo.SerializeToString, response_deserializer=booking__pb2.BookingResponse.FromString)
        self.DeleteBooking = channel.unary_unary('/sreda.grpc.gen.Booking/DeleteBooking', request_serializer=booking__pb2.BookingResponse.SerializeToString, response_deserializer=booking__pb2.BookingResponse.FromString)

class BookingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBookings(self, request, context):
        """Calling by sreda server to get booking info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBooking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditBooking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBooking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

def add_BookingServicer_to_server(servicer, server):
    rpc_method_handlers = {'GetBookings': grpc.unary_stream_rpc_method_handler(servicer.GetBookings, request_deserializer=booking__pb2.BookingInfoRequest.FromString, response_serializer=booking__pb2.GetBookingInfoResponse.SerializeToString), 'AddBooking': grpc.unary_unary_rpc_method_handler(servicer.AddBooking, request_deserializer=booking__pb2.BookingInfo.FromString, response_serializer=booking__pb2.BookingResponse.SerializeToString), 'EditBooking': grpc.unary_unary_rpc_method_handler(servicer.EditBooking, request_deserializer=booking__pb2.BookingInfo.FromString, response_serializer=booking__pb2.BookingResponse.SerializeToString), 'DeleteBooking': grpc.unary_unary_rpc_method_handler(servicer.DeleteBooking, request_deserializer=booking__pb2.BookingResponse.FromString, response_serializer=booking__pb2.BookingResponse.SerializeToString)}
    generic_handler = grpc.method_handlers_generic_handler('sreda.grpc.gen.Booking', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

class Booking(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBookings(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sreda.grpc.gen.Booking/GetBookings', booking__pb2.BookingInfoRequest.SerializeToString, booking__pb2.GetBookingInfoResponse.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBooking(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.Booking/AddBooking', booking__pb2.BookingInfo.SerializeToString, booking__pb2.BookingResponse.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditBooking(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.Booking/EditBooking', booking__pb2.BookingInfo.SerializeToString, booking__pb2.BookingResponse.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBooking(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.Booking/DeleteBooking', booking__pb2.BookingResponse.SerializeToString, booking__pb2.BookingResponse.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)