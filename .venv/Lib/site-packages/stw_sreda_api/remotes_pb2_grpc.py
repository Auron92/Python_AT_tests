"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from . import common_pb2 as common__pb2
from . import remotes_pb2 as remotes__pb2

class RemotesServiceStub(object):
    """TODO: These should only be allowed when binded

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRemotes = channel.unary_unary('/sreda.grpc.gen.RemotesService/GetRemotes', request_serializer=common__pb2.Empty.SerializeToString, response_deserializer=remotes__pb2.Remotes.FromString)
        self.AddRemote = channel.unary_unary('/sreda.grpc.gen.RemotesService/AddRemote', request_serializer=remotes__pb2.Remote.SerializeToString, response_deserializer=common__pb2.Empty.FromString)
        self.RemoveRemote = channel.unary_unary('/sreda.grpc.gen.RemotesService/RemoveRemote', request_serializer=remotes__pb2.Remote.SerializeToString, response_deserializer=common__pb2.Empty.FromString)

class RemotesServiceServicer(object):
    """TODO: These should only be allowed when binded

    """

    def GetRemotes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRemote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRemote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

def add_RemotesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {'GetRemotes': grpc.unary_unary_rpc_method_handler(servicer.GetRemotes, request_deserializer=common__pb2.Empty.FromString, response_serializer=remotes__pb2.Remotes.SerializeToString), 'AddRemote': grpc.unary_unary_rpc_method_handler(servicer.AddRemote, request_deserializer=remotes__pb2.Remote.FromString, response_serializer=common__pb2.Empty.SerializeToString), 'RemoveRemote': grpc.unary_unary_rpc_method_handler(servicer.RemoveRemote, request_deserializer=remotes__pb2.Remote.FromString, response_serializer=common__pb2.Empty.SerializeToString)}
    generic_handler = grpc.method_handlers_generic_handler('sreda.grpc.gen.RemotesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

class RemotesService(object):
    """TODO: These should only be allowed when binded

    """

    @staticmethod
    def GetRemotes(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.RemotesService/GetRemotes', common__pb2.Empty.SerializeToString, remotes__pb2.Remotes.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRemote(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.RemotesService/AddRemote', remotes__pb2.Remote.SerializeToString, common__pb2.Empty.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRemote(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sreda.grpc.gen.RemotesService/RemoveRemote', remotes__pb2.Remote.SerializeToString, common__pb2.Empty.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)