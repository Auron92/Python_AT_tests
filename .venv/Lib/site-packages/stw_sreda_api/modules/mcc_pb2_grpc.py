"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from .. import common_pb2 as common__pb2
from .. import timbrel_messages_pb2 as timbrel__messages__pb2

class MccModuleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TimbrelReqRep = channel.stream_stream('/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelReqRep', request_serializer=timbrel__messages__pb2.TimbrelReqRepMessage.SerializeToString, response_deserializer=timbrel__messages__pb2.TimbrelReqRepMessage.FromString)
        self.TimbrelTelemetry = channel.stream_stream('/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelTelemetry', request_serializer=timbrel__messages__pb2.TimbrelTelemetryMessage.SerializeToString, response_deserializer=timbrel__messages__pb2.TimbrelTelemetryMessage.FromString)
        self.TimbrelEvent = channel.stream_stream('/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelEvent', request_serializer=timbrel__messages__pb2.TimbrelEventMessage.SerializeToString, response_deserializer=timbrel__messages__pb2.TimbrelEventMessage.FromString)
        self.Statistics = channel.unary_stream('/sreda.grpc.gen.timbrel.v2.MccModuleService/Statistics', request_serializer=common__pb2.Empty.SerializeToString, response_deserializer=timbrel__messages__pb2.TimbrelStatisticsMessage.FromString)

class MccModuleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TimbrelReqRep(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimbrelTelemetry(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimbrelEvent(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Statistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

def add_MccModuleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {'TimbrelReqRep': grpc.stream_stream_rpc_method_handler(servicer.TimbrelReqRep, request_deserializer=timbrel__messages__pb2.TimbrelReqRepMessage.FromString, response_serializer=timbrel__messages__pb2.TimbrelReqRepMessage.SerializeToString), 'TimbrelTelemetry': grpc.stream_stream_rpc_method_handler(servicer.TimbrelTelemetry, request_deserializer=timbrel__messages__pb2.TimbrelTelemetryMessage.FromString, response_serializer=timbrel__messages__pb2.TimbrelTelemetryMessage.SerializeToString), 'TimbrelEvent': grpc.stream_stream_rpc_method_handler(servicer.TimbrelEvent, request_deserializer=timbrel__messages__pb2.TimbrelEventMessage.FromString, response_serializer=timbrel__messages__pb2.TimbrelEventMessage.SerializeToString), 'Statistics': grpc.unary_stream_rpc_method_handler(servicer.Statistics, request_deserializer=common__pb2.Empty.FromString, response_serializer=timbrel__messages__pb2.TimbrelStatisticsMessage.SerializeToString)}
    generic_handler = grpc.method_handlers_generic_handler('sreda.grpc.gen.timbrel.v2.MccModuleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

class MccModuleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TimbrelReqRep(request_iterator, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelReqRep', timbrel__messages__pb2.TimbrelReqRepMessage.SerializeToString, timbrel__messages__pb2.TimbrelReqRepMessage.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimbrelTelemetry(request_iterator, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelTelemetry', timbrel__messages__pb2.TimbrelTelemetryMessage.SerializeToString, timbrel__messages__pb2.TimbrelTelemetryMessage.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimbrelEvent(request_iterator, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/sreda.grpc.gen.timbrel.v2.MccModuleService/TimbrelEvent', timbrel__messages__pb2.TimbrelEventMessage.SerializeToString, timbrel__messages__pb2.TimbrelEventMessage.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Statistics(request, target, options=(), channel_credentials=None, call_credentials=None, insecure=False, compression=None, wait_for_ready=None, timeout=None, metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sreda.grpc.gen.timbrel.v2.MccModuleService/Statistics', common__pb2.Empty.SerializeToString, timbrel__messages__pb2.TimbrelStatisticsMessage.FromString, options, channel_credentials, insecure, call_credentials, compression, wait_for_ready, timeout, metadata)