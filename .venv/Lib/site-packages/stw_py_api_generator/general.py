"""Общие функции и параметры для генератора."""

import enum
from datetime import datetime

from crccheck import crc

encoding = 'utf-8'


class Priority(enum.Enum):
    """Приоритет у сообщения согласно протоколу.

    Копия из runtime.sdk.broker_messages потому что генератор не зависит от рантайма
    """

    HIGHEST = 0
    HIGH = 1
    LOW = 2
    LOWEST = 3


def now_str() -> str:
    """Текущее время в формате строки."""
    return datetime.now().strftime('%Y-%m-%d-%H-%M-%S')


def now_split_str() -> str:
    """Текущее время в привычном формате строки."""
    return datetime.now().strftime('%d.%m.%Y %H:%M:%S')


def calculate_msg_id(message_name: str) -> int:
    """Конвертирует однозначно строковое имя сообщения в id типа int."""
    crc_zlib = crc.Crc32IsoHdlc()
    crc_zlib.process(message_name.encode(encoding))
    return crc_zlib.final()
