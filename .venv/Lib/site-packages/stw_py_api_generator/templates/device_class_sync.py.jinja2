from stw_py_api_runtime.gen_classes.cfg_handler.cfg_handler import CfgHandler
from stw_py_api_runtime.gen_classes.pygen_device_class import PyGenDevice
from stw_py_api_runtime.gen_shared_types import SharedTypesDevice
from stw_py_api_runtime.sdk.brokers.broker_api import BrokerAPI

from .cmds.command_sender import CommandSender
from .tms.tm import Tm
from .events.events import Event
from .messages import messages_map


class {{ device_name | snake_to_upper }}Device(PyGenDevice):
    def __init__(
        self,
        broker: BrokerAPI,
        device_id: int | None = None,
        ip_address: str | None = None,
    ):
        super({{ device_name | snake_to_upper }}Device, self).__init__(broker, device_id, ip_address)
        self.messages = messages_map
        self.cmds: CommandSender = CommandSender(self._device_address, broker)
        self.tms: Tm = Tm(self._device_address, broker, self)
        self.events: Event = Event(self._device_address, broker, self)
        self.cfg: CfgHandler = CfgHandler(self._device_address, broker, messages_map)
