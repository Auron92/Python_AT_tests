"""Определение класса для описания типа данных."""
from loguru import logger

from stw_py_api_generator.legacy.stw_yaml_gen import Type
from stw_py_api_generator.python_classes.generic import PythonClass
from stw_py_api_generator.python_classes.types.array_python_class import ArrayPythonClass
from stw_py_api_generator.python_classes.types.bits_python_class import BitsPythonClass
from stw_py_api_generator.python_classes.types.enum_python_class import EnumPythonClass
from stw_py_api_generator.python_classes.types.not_implemented_python_class import NotImplementedPythonClass
from stw_py_api_generator.python_classes.types.optional_python_class import OptionalPythonClass
from stw_py_api_generator.python_classes.types.string_python_class import StringPythonClass
from stw_py_api_generator.python_classes.types.struct_python_class import StructPythonClass
from stw_py_api_generator.python_classes.types.synonym_python_class import SynonymPythonClass
from stw_py_api_generator.python_classes.types.variant_python_class import VariantPythonClass
from stw_py_api_generator.python_classes.types.vector_python_class import VectorPythonClass


def from_yaml_type(yaml_type: Type) -> PythonClass:  # noqa: WPS212, C901
    """Возвращает созданный объект-тип ТМ по его описанию в yaml."""
    if yaml_type.kind == 'struct':
        return StructPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'enum':
        return EnumPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'array':
        return ArrayPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'synonym':
        return SynonymPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'bits':
        return BitsPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'string':
        return StringPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'optional':
        return OptionalPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'vector':
        return VectorPythonClass.from_yaml_type(yaml_type)
    if yaml_type.kind == 'variant':
        return VariantPythonClass.from_yaml_type(yaml_type)

    logger.warning(f'Unsupported type kind: {yaml_type.kind}. {yaml_type.name} was mocked.')
    return NotImplementedPythonClass.from_yaml_type(yaml_type)
