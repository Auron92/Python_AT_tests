"""ОПисание структур и Enum."""
from dataclasses import dataclass, field
from typing import Any, List

from stw_py_api_generator.parsing.type_descriptions import TypeDescription
from stw_py_api_generator.parsing.type_index import TypeIndex


@dataclass
class StructFieldDesc(TypeDescription):
    """Поле в структуре."""

    name: str = ''
    type: TypeDescription | None = None


@dataclass
class StructDesc(TypeDescription):
    """Структура (совокупность полей)."""

    name: str = ''
    fields: List[StructFieldDesc] = field(default_factory=list)

    @staticmethod
    def build(yaml_element, type_index: TypeIndex):  # noqa: WPS602
        """Создать объект StructDesc."""
        struct_fields = [
            StructFieldDesc(
                name=yaml_field['name'],
                type=type_index[yaml_field['type']],
                full_path=yaml_field['name'],
            )
            for yaml_field in yaml_element['fields']
        ]
        return StructDesc(
            name=yaml_element['name'],
            full_path=yaml_element['name'],
            fields=struct_fields,
        )


@dataclass
class EnumValueDesc(object):
    """Поле в Enum."""

    name: str
    value: Any


@dataclass
class EnumDesc(TypeDescription):
    """Enum Структура (совокупность полей)."""

    values: List[EnumValueDesc] = field(default_factory=list)

    @staticmethod
    def build(yaml_type):  # noqa: WPS602
        """Создать объект EnumDesc."""
        enum_values = [
            EnumValueDesc(
                name=yaml_source['name'],
                value=yaml_source['value'],
            )
            for yaml_source in yaml_type['values']
        ]
        return EnumDesc(
            info=yaml_type.get('info', ''),
            full_path=yaml_type['name'],
            values=enum_values,
        )


def build_type_description(yaml_type, type_index: TypeIndex):
    """Сделать объект в зависимости от типа."""
    kind = yaml_type['kind']
    if kind == 'struct':
        return StructDesc.build(yaml_type, type_index)
    if kind == 'enum':
        return EnumDesc.build(yaml_type)

    raise ValueError(f'unknown kind: {kind}')


@dataclass
class CommandParamDesc(object):
    """Параметр команды."""

    name: str
    type: TypeDescription
    info: str = ''


@dataclass
class CommandDesc(object):
    """Описание команды из yaml файла."""

    name: str
    msg_id: int
    return_type: TypeDescription
    params: List[CommandParamDesc] = field(default_factory=list)
    info: str = ''


@dataclass
class TmParamDesc(object):
    """Описание параметра телеметрии."""

    name: str
    type: TypeDescription
    info: str = ''


@dataclass
class TelemetryDesc(object):
    """Описание параметра телеметрии."""

    name: str
    msg_id: int
    info: str = ''
    params: List[TmParamDesc] = field(default_factory=list)


@dataclass
class ModuleDesc(object):
    """Описание модуля."""

    name: str
    imports: List[str]
    info: str = ''
    cmds: List[CommandDesc] = field(default_factory=list)
    tms: List[TelemetryDesc] = field(default_factory=list)
    types: List[TypeDescription] = field(default_factory=list)
    events: Any = None
    cfg: Any = None
