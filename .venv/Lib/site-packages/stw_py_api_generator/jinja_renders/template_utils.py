"""Функции для использования в шаблонах jinja."""
from functools import wraps

from stw_py_api_generator.parsing.normalising import is_keyword

jinja_globals = {}


def jinja_template_use(func):
    """Декоратор для возможности использовать функцию в шаблонах jinja."""
    jinja_globals.update({func.__name__: func})

    @wraps(func)
    def _inner(*args, **kwargs):
        return func(*args, **kwargs)
    return _inner


@jinja_template_use
def denormalize_name(safe_name: str):
    """Антагонист normalize_device_file()."""
    if safe_name.endswith('_') and is_keyword(safe_name[:-1]):
        return safe_name[:-1]
    return safe_name


@jinja_template_use
def denormalize_dotted_name(doted_safe_name: str):
    """Антагонист normalize_device_file()."""
    return '.'.join(
        map(denormalize_name, doted_safe_name.split('.')),
    )


@jinja_template_use
def set_message_params(params: dict) -> str:
    """Собрать в одну строку инициализацию параметров сообщения."""
    return ', '.join([f'{param}={value}' for param, value in params.items()])  # noqa: WPS221
